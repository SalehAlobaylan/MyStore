version: 2.1
orbs:
  node: circleci/node@5.0.2
  aws-cli: circleci/aws-cli@3.1.1

jobs:
  build:
    docker:
      - image: cimg/node:20.11.1
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: |
            npm install
            cd app/MyStore && npm install && cd ../..
      - run:
          name: Build application
          command: |
            # Build Angular frontend using npx
            cd app/MyStore && npx ng build --configuration=production && cd ../..
            
            # Compile TypeScript files using npx
            npx tsc -p app/backend/tsconfig.json
            
            # Create proper directory structure for deployment
            mkdir -p server
            cp -r dist server/
            cp package.json server/
            cp package-lock.json server/
            
            # Create startup script that works on AWS
            echo "#!/bin/bash" > server/start.sh
            echo "cd /var/app/current" >> server/start.sh
            echo "node dist/app/backend/server.js" >> server/start.sh
            chmod +x server/start.sh
      - persist_to_workspace:
          root: .
          paths:
            - server
            - .ebextensions

  deploy:
    docker:
      - image: cimg/python:3.9-node
    steps:
      - checkout
      - attach_workspace:
          at: .
      - aws-cli/setup
      - run:
          name: Install EB CLI
          command: |
            sudo pip install awsebcli
      - run:
          name: Create deployment files
          command: |
            # Create Procfile with bash command to avoid Windows path issues
            echo "web: bash ./start.sh" > server/Procfile
            
            # Ensure .ebextensions directory exists
            mkdir -p .ebextensions
            
            # Create nodecommand.config
            cat > .ebextensions/01_nodecommand.config << 'EOF'
            option_settings:
              aws:elasticbeanstalk:container:nodejs:
                NodeCommand: "bash ./start.sh"
              aws:elasticbeanstalk:application:environment:
                NODE_ENV: production
                PORT: 8081
            EOF
            
            # Copy .ebextensions to server directory
            cp -r .ebextensions server/
            
            # Navigate to server directory to create zip using Linux paths
            cd server
            
            # Create deployment zip with forward slashes only
            zip -r "../deploy.zip" * .ebextensions -x "node_modules/*"
      - run:
          name: Deploy to Elastic Beanstalk
          command: |
            # Upload zip to S3
            aws s3 cp deploy.zip s3://elasticbeanstalk-us-east-1-204546021765/deploy-${CIRCLE_BUILD_NUM}.zip
            
            # Create version
            aws elasticbeanstalk create-application-version \
              --application-name MyStore \
              --version-label mystore-${CIRCLE_BUILD_NUM} \
              --source-bundle S3Bucket="elasticbeanstalk-us-east-1-204546021765",S3Key="deploy-${CIRCLE_BUILD_NUM}.zip"
            
            # Deploy version
            aws elasticbeanstalk update-environment \
              --environment-name MyStore-dev \
              --version-label mystore-${CIRCLE_BUILD_NUM}

workflows:
  deploy-workflow:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: master